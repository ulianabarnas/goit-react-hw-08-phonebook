{"version":3,"file":"static/js/446.9392fe67.chunk.js","mappings":"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","sources":["redux/selectors.js","shared/Loader/Loader.jsx","components/ContactForm/ContactForm.styles.jsx","components/FormError/FormError.styles.jsx","components/FormError/FormError.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styles.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styles.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styles.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"#fff\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </>\n  );\n}\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  margin-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.text};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.white};\n  transition: all 100ms linear;\n  background-color: ${p => p.theme.colors.primary};\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: red;\n  text-align: left;\n  margin: 4px 0 8px;\n`;\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { ErrorText } from './FormError.styles';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport { Button, Input, Label } from './ContactForm.styles';\nimport FormError from 'components/FormError/FormError';\n\nconst initialValues = {\n  name: '',\n  phone: '',\n};\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst phoneRegExp = /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/;\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    )\n    .required('Please fill in the name'),\n\n  phone: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Please fill in the number'),\n});\n\nNotify.init({\n  position: 'center-top',\n  fontSize: '16px',\n  timeout: 4000,\n  width: '400px',\n});\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    function isDublicateName(values) {\n      return contacts.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      );\n    }\n\n    if (isDublicateName(values)) {\n      return Notify.info(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n        </Label>\n        <FormError name=\"name\" />\n\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"phone\" />\n        </Label>\n        <FormError name=\"phone\" />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n}\n","import { Button } from 'components/ContactForm/ContactForm.styles';\nimport { FaPhoneAlt } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nexport const Icon = styled(FaPhoneAlt)`\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const CloseButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  width: auto;\n  text-align: right;\n  margin-top: 0;\n  margin-left: auto;\n`;\n","import { AiOutlineClose } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { CloseButton, Icon } from './Contact.styles';\n\nexport default function Contact({ contact }) {\n  const dispatch = useDispatch();\n\n  const { name, phone, id } = contact;\n  return (\n    <>\n      <Icon />\n      {name}: {phone}\n      <CloseButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <AiOutlineClose size={18} />\n      </CloseButton>\n    </>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    text-align: left;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;\n    color: ${p => p.theme.colors.white};\n    font-size: ${p => p.theme.fontSizes.s};\n    \n    :not(:last-child) {\n        margin-bottom: 10px;\n    };\n`;\n\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nimport Contact from 'components/Contact/Contact';\nimport { Item, List } from './ContactList.styles';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          <Contact contact={contact} />\n        </Item>\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nimport { Label } from 'components/ContactForm/ContactForm.styles';\n\nexport const FilterLabel = styled(Label)`\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  margin-bottom: 16px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n  color: ${p => p.theme.colors.text};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { FilterInput, FilterLabel } from './Filter.styles';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" value={filter} onChange={handleChange} />\n    </FilterLabel>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: ${p => p.theme.colors.primary};\n`;\n\nexport const Subtitle = styled.h2`\n  color: ${p => p.theme.colors.white};\n  letter-spacing: 0.02em;\n`;\n\nexport const Message = styled.p`\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.secondary};\n  color: white;\n`;\n\nexport const Error = styled(Message)`\n  background-color: ${p => p.theme.colors.bad};\n`;\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectFilter,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/selectors';\n\nimport Box from 'components/Box/Box';\nimport Loader from 'shared/Loader/Loader';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Error, Message, Subtitle, Title } from './Contacts.styles';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      as=\"section\"\n      maxWidth=\"400px\"\n      width=\"80vw\"\n      textAlign=\"center\"\n      mx=\"auto\"\n      mt={5}\n      pt={5}\n      bg=\"white\"\n      borderRadius=\"normal\"\n      boxShadow=\"normal\"\n      overflow=\"hidden\"\n    >\n      <Box px={5}>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </Box>\n\n      <Box mt={5} py={5} px={5} bg=\"primary\">\n        <Subtitle>Contacts</Subtitle>\n        <Filter />\n\n        {isLoading && <Loader />}\n\n        {error && <Error>Something goes wrong. {error}.</Error>}\n\n        {contacts.length > 0 && <ContactList />}\n\n        {filter !== '' && contacts.length === 0 && (\n          <Message>This name was not found</Message>\n        )}\n      </Box>\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filterValue","normalizedFilter","toLowerCase","contact","name","includes","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Label","styled","p","theme","fontWeights","semibold","space","colors","text","Input","Field","fontSizes","s","borders","normal","radii","Button","none","bold","white","primary","secondary","ErrorText","FormError","render","message","initialValues","phone","validationSchema","yup","shape","matches","required","ContactForm","dispatch","useDispatch","useSelector","onSubmit","values","resetForm","find","isDublicateName","Notify","addContact","autoComplete","type","position","fontSize","timeout","Icon","FaPhoneAlt","CloseButton","Contact","id","onClick","deleteContact","size","List","Item","ContactList","map","FilterLabel","FilterInput","Filter","value","onChange","e","target","changeFilter","Title","Subtitle","Message","Error","bad","Contacts","useEffect","fetchContacts","Box","as","maxWidth","textAlign","mx","mt","pt","bg","borderRadius","boxShadow","overflow","px","py","length"],"sourceRoot":""}