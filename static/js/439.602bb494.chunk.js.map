{"version":3,"file":"static/js/439.602bb494.chunk.js","mappings":"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","sources":["components/FormError/FormError.styles.jsx","components/FormError/FormError.jsx","redux/selectors.js","components/ContactForm/ContactForm.styles.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styles.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styles.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styles.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: ${p => p.theme.colors.bad};\n  text-align: left;\n  margin: 4px 0 8px;\n`;\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { ErrorText } from './FormError.styles';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  margin-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.text};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.white};\n  transition: all 100ms linear;\n  background-color: ${p => p.theme.colors.primary};\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport { Button, Input, Label } from './ContactForm.styles';\nimport FormError from 'components/FormError/FormError';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberRegExp = /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/;\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    )\n    .required('Please fill in the name'),\n\n  number: yup\n    .string()\n    .matches(\n      numberRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Please fill in the number'),\n});\n\nNotify.init({\n  position: 'center-top',\n  fontSize: '16px',\n  timeout: 4000,\n  width: '400px',\n});\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    function isDublicateName(values) {\n      return contacts.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      );\n    }\n\n    if (isDublicateName(values)) {\n      return Notify.info(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n        </Label>\n        <FormError name=\"name\" />\n\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n        </Label>\n        <FormError name=\"number\" />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\nimport { FaPhoneAlt } from 'react-icons/fa';\n\nimport { Button } from 'components/ContactForm/ContactForm.styles';\n\nexport const Icon = styled(FaPhoneAlt)`\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const CloseButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  width: auto;\n  text-align: right;\n  margin-top: 0;\n  margin-left: auto;\n`;\n","import { AiOutlineClose } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { CloseButton, Icon } from './Contact.styles';\n\nexport default function Contact({ contact }) {\n  const dispatch = useDispatch();\n\n  const { name, number, id } = contact;\n  \n  return (\n    <>\n      <Icon />\n      {name}: {number}\n      <CloseButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <AiOutlineClose size={18} />\n      </CloseButton>\n    </>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  text-align: left;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.s};\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nimport Contact from 'components/Contact/Contact';\nimport { Item, List } from './ContactList.styles';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          <Contact contact={contact} />\n        </Item>\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nimport { Label } from 'components/ContactForm/ContactForm.styles';\n\nexport const FilterLabel = styled(Label)`\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  margin-bottom: 16px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n  color: ${p => p.theme.colors.text};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { FilterInput, FilterLabel } from './Filter.styles';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" value={filter} onChange={handleChange} />\n    </FilterLabel>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: ${p => p.theme.colors.primary};\n`;\n\nexport const Subtitle = styled.h2`\n  color: ${p => p.theme.colors.white};\n  letter-spacing: 0.02em;\n`;\n\nexport const Message = styled.p`\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.secondary};\n  color: white;\n`;\n\nexport const Error = styled(Message)`\n  background-color: ${p => p.theme.colors.bad};\n`;\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectFilter,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/selectors';\n\nimport Box from 'components/Box/Box';\nimport Loader from 'shared/Loader/Loader';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Error, Message, Subtitle, Title } from './Contacts.styles';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      as=\"section\"\n      maxWidth=\"400px\"\n      width=\"80vw\"\n      textAlign=\"center\"\n      mx=\"auto\"\n      mt={5}\n      pt={5}\n      bg=\"white\"\n      borderRadius=\"normal\"\n      boxShadow=\"normal\"\n      overflow=\"hidden\"\n    >\n      <Box px={5}>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </Box>\n\n      <Box mt={5} py={5} px={5} bg=\"primary\">\n        <Subtitle>Contacts</Subtitle>\n        <Filter />\n\n        {isLoading && <Loader color=\"#fff\" />}\n\n        {error && <Error>Something goes wrong. {error}.</Error>}\n\n        {contacts.length > 0 && <ContactList />}\n\n        {filter !== '' && contacts.length === 0 && (\n          <Message>This name was not found</Message>\n        )}\n      </Box>\n    </Box>\n  );\n}\n"],"names":["ErrorText","styled","p","theme","colors","bad","FormError","name","render","message","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filterValue","normalizedFilter","toLowerCase","contact","includes","Label","fontWeights","semibold","space","text","Input","Field","fontSizes","s","borders","normal","radii","Button","none","bold","white","primary","secondary","initialValues","number","validationSchema","yup","shape","matches","required","ContactForm","dispatch","useDispatch","useSelector","onSubmit","values","resetForm","find","isDublicateName","Notify","addContact","autoComplete","type","position","fontSize","timeout","width","Icon","FaPhoneAlt","CloseButton","Contact","id","onClick","deleteContact","size","List","Item","ContactList","map","FilterLabel","FilterInput","Filter","value","onChange","e","target","changeFilter","Title","Subtitle","Message","Error","Contacts","useEffect","fetchContacts","Box","as","maxWidth","textAlign","mx","mt","pt","bg","borderRadius","boxShadow","overflow","px","py","Loader","color","length"],"sourceRoot":""}