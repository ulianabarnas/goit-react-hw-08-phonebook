{"version":3,"file":"static/js/236.b30e80cb.chunk.js","mappings":"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","sources":["components/FormError/FormError.styles.jsx","components/FormError/FormError.jsx","components/UI/FormikForm/FormikForm.styles.jsx","components/UI/Message/Message.styles.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styles.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styles.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styles.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: ${p => p.theme.colors.error};\n  text-align: left;\n  margin: 4px 0 8px;\n`;\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { ErrorText } from './FormError.styles';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nimport { Button } from '../Button/Button.styles';\n\nexport const StyledForm = styled(Form)`\n  width: 320px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  margin-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.text};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n`;\n\nexport const StyledButton = styled(Button)`\n   width: 100%;\n   margin-top: ${p => p.theme.space[4]}px;\n`","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  text-align: center;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.secondary};\n  color: white;\n`;\n\nexport const Error = styled(Message)`\n  background-color: ${p => p.theme.colors.error};\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport FormError from 'components/FormError/FormError';\nimport { Input, Label, StyledButton } from 'components/UI/FormikForm/FormikForm.styles';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberRegExp = /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/;\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    )\n    .required('Please fill in the name'),\n\n  number: yup\n    .string()\n    .matches(\n      numberRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Please fill in the number'),\n});\n\nNotify.init({\n  position: 'center-top',\n  fontSize: '16px',\n  timeout: 4000,\n  width: '400px',\n});\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    function isDublicateName(values) {\n      return contacts.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      );\n    }\n\n    if (isDublicateName(values)) {\n      return Notify.info(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n        </Label>\n        <FormError name=\"name\" />\n\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n        </Label>\n        <FormError name=\"number\" />\n\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </Form>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\nimport { FaPhoneAlt } from 'react-icons/fa';\nimport { Button } from 'components/UI/Button/Button.styles';\n\nexport const Icon = styled(FaPhoneAlt)`\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const CloseButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  width: auto;\n  text-align: right;\n  margin-top: 0;\n  margin-left: auto;\n`;\n","import { AiOutlineClose } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { CloseButton, Icon } from './Contact.styles';\n\nexport default function Contact({ contact }) {\n  const dispatch = useDispatch();\n\n  const { name, number, id } = contact;\n  \n  return (\n    <>\n      <Icon />\n      {name}: {number}\n      <CloseButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <AiOutlineClose size={18} />\n      </CloseButton>\n    </>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  text-align: left;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.s};\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nimport Contact from 'components/Contact/Contact';\nimport { Item, List } from './ContactList.styles';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          <Contact contact={contact} />\n        </Item>\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nimport { Label } from 'components/UI/FormikForm/FormikForm.styles';\n\nexport const FilterLabel = styled(Label)`\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  margin-bottom: 16px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n  color: ${p => p.theme.colors.text};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { FilterInput, FilterLabel } from './Filter.styles';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" value={filter} onChange={handleChange} />\n    </FilterLabel>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: ${p => p.theme.colors.primary};\n`;\n\nexport const Subtitle = styled.h2`\n  color: ${p => p.theme.colors.white};\n  letter-spacing: 0.02em;\n`;\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectFilter,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/selectors';\n\nimport Box from 'components/UI/Box/Box';\nimport Loader from 'components/UI/Loader/Loader';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { Subtitle, Title } from './Contacts.styles';\nimport { Error, Message } from 'components/UI/Message/Message.styles';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      as=\"section\"\n      maxWidth=\"400px\"\n      width=\"80vw\"\n      textAlign=\"center\"\n      mx=\"auto\"\n      mt={5}\n      pt={5}\n      bg=\"white\"\n      borderRadius=\"normal\"\n      boxShadow=\"normal\"\n      overflow=\"hidden\"\n    >\n      <Box px={5}>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </Box>\n\n      <Box mt={5} py={5} px={5} bg=\"primary\">\n        <Subtitle>Contacts</Subtitle>\n        <Filter />\n\n        {isLoading && <Loader color=\"#fff\" />}\n\n        {error && <Error>Something goes wrong. {error}.</Error>}\n\n        {contacts.length > 0 && <ContactList />}\n\n        {filter !== '' && contacts.length === 0 && (\n          <Message>This name was not found</Message>\n        )}\n      </Box>\n    </Box>\n  );\n}\n"],"names":["ErrorText","styled","p","theme","colors","error","FormError","name","render","message","StyledForm","Form","Label","fontWeights","semibold","space","text","Input","Field","fontSizes","s","borders","normal","radii","StyledButton","Button","Message","secondary","Error","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","selectFilter","filter","selectVisibleContacts","createSelector","filterValue","normalizedFilter","toLowerCase","contact","includes","initialValues","number","validationSchema","yup","shape","matches","required","ContactForm","dispatch","useDispatch","useSelector","onSubmit","values","resetForm","find","isDublicateName","Notify","addContact","autoComplete","type","position","fontSize","timeout","width","Icon","FaPhoneAlt","CloseButton","Contact","id","onClick","deleteContact","size","List","Item","white","ContactList","map","FilterLabel","FilterInput","Filter","value","onChange","e","target","changeFilter","Title","primary","Subtitle","Contacts","useEffect","fetchContacts","Box","as","maxWidth","textAlign","mx","mt","pt","bg","borderRadius","boxShadow","overflow","px","py","Loader","color","length"],"sourceRoot":""}