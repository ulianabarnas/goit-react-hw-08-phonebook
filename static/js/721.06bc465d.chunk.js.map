{"version":3,"file":"static/js/721.06bc465d.chunk.js","mappings":"gMAEaA,E,QAAYC,GAAAA,EAAH,kFACX,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,GAAnB,I,UCEG,SAASC,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAClC,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACT,EAAD,UAAYS,GAAhB,GAGpB,C,mJCTYC,EAAOT,EAAAA,GAAAA,KAAH,yCAQJU,EAAQV,EAAAA,GAAAA,MAAH,0HAGD,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,YAAYC,QAAxB,IACF,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,MAAM,EAAlB,IACN,SAAAZ,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,I,IAGSd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAH,8LAEH,SAAAC,GAAC,OAAIA,EAAEC,MAAMc,UAAUC,CAAtB,IACH,SAAAhB,GAAC,OAAIA,EAAEC,MAAMW,MAAM,EAAlB,IAGF,SAAAZ,GAAC,OAAIA,EAAEC,MAAMgB,QAAQC,MAApB,IAA8B,SAAAlB,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IACzB,SAAAb,GAAC,OAAIA,EAAEC,MAAMkB,MAAMD,MAAlB,I,SCnBdE,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAqBCC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,SAAC,KAAD,CACEL,cAAeA,EAEfM,SAhBiB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJV,MAAOQ,EAAKG,SAASX,MAAMY,MAC3BX,SAAUO,EAAKG,SAASV,SAASW,SAGrCJ,EAAKK,OACN,EAGC,UAKE,UAAC1B,EAAD,CAAM2B,aAAa,MAAnB,WACE,UAAC1B,EAAD,oBAEE,SAAC,KAAD,CAAO2B,KAAK,QAAQ/B,KAAK,cAE3B,SAACD,EAAA,EAAD,CAAWC,KAAK,WAEhB,UAACI,EAAD,uBAEE,SAAC,KAAD,CAAO2B,KAAK,WAAW/B,KAAK,iBAE9B,SAACD,EAAA,EAAD,CAAWC,KAAK,cAEhB,mBAAQ+B,KAAK,SAAb,wBAIP,ECjEc,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACf,EAAD,MAGL,C","sources":["components/FormError/FormError.styles.jsx","components/FormError/FormError.jsx","components/LoginForm/LoginForm.styles.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: ${p => p.theme.colors.bad};\n  text-align: left;\n  margin: 4px 0 8px;\n`;\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { ErrorText } from './FormError.styles';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   margin-bottom: 16px;\n// `;\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  margin-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.text};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n`;","import FormError from 'components/FormError/FormError';\nimport { Field, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n// import * as yup from 'yup';\nimport { Form, Label } from './LoginForm.styles';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\n// const validationSchema = yup.object().shape({\n//   email: yup\n//     .string()\n//     .matches(\n//       nameRegExp,\n//       'email may contain only letters, apostrophe, dash and spaces.'\n//     )\n//     .required('Please fill in the name'),\n\n//   password: yup\n//     .string()\n//     .matches(\n//       numberRegExp,\n//       'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n//     )\n//     .required('Please fill in the number'),\n// });\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      // validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label>\n          Email\n          <Field type=\"email\" name=\"email\" />\n        </Label>\n        <FormError name=\"email\" />\n\n        <Label>\n          Password\n          <Field type=\"password\" name=\"password\" />\n        </Label>\n        <FormError name=\"password\" />\n\n        <button type=\"submit\">Log In</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["ErrorText","styled","p","theme","colors","bad","FormError","name","render","message","Form","Label","fontWeights","semibold","space","text","Field","fontSizes","s","borders","normal","radii","initialValues","email","password","LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","logIn","elements","value","reset","autoComplete","type","Login","Helmet"],"sourceRoot":""}