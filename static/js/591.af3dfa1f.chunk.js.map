{"version":3,"file":"static/js/591.af3dfa1f.chunk.js","mappings":"iOAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEpBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACX,EAAgBQ,IACjB,SAACN,EAAUU,GACT,IAAMC,EAAmBD,EAAYE,cAErC,OAAOZ,EAASO,QAAO,SAAAM,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,EADR,GAG/B,I,mBCGH,GAVmBK,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,oBChBa,SAASC,IACtB,OACE,+BACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPV,MAAM,OACNW,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,iBAAiB,GACjBC,SAAS,KAIhB,C,mDCdYC,EAAQjB,EAAAA,GAAAA,MAAH,0HAGD,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,QAAxB,IACF,SAAAH,GAAC,OAAIA,EAAEC,MAAMjB,MAAM,EAAlB,IACN,SAAAgB,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,IAAnB,IAGCC,GAAQxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAH,8LAEH,SAAAkB,GAAC,OAAIA,EAAEC,MAAMO,UAAUC,CAAtB,IACH,SAAAT,GAAC,OAAIA,EAAEC,MAAMjB,MAAM,EAAlB,IAGF,SAAAgB,GAAC,OAAIA,EAAEC,MAAMS,QAAQC,MAApB,IAA8B,SAAAX,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,IAAnB,IACzB,SAAAL,GAAC,OAAIA,EAAEC,MAAMW,MAAMD,MAAlB,IAIPE,EAAS/B,EAAAA,GAAAA,OAAH,uTAGH,SAAAkB,GAAC,OAAIA,EAAEC,MAAMjB,MAAM,EAAlB,IACJ,SAAAgB,GAAC,OAAIA,EAAEC,MAAMjB,MAAM,EAAlB,IACF,SAAAgB,GAAC,OAAIA,EAAEC,MAAMS,QAAQI,IAApB,IACM,SAAAd,GAAC,OAAIA,EAAEC,MAAMW,MAAMD,MAAlB,IACH,SAAAX,GAAC,OAAIA,EAAEC,MAAMC,YAAYa,IAAxB,IACH,SAAAf,GAAC,OAAIA,EAAEC,MAAMO,UAAUC,CAAtB,IACL,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOY,KAAnB,IAEU,SAAAhB,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,OAAnB,IAIC,SAAAjB,GAAC,OAAIA,EAAEC,MAAMG,OAAOc,SAAnB,ICnCZC,EAAYrC,EAAAA,GAAAA,EAAH,kFCGP,SAASsC,EAAT,GAA8B,IAATxC,EAAQ,EAARA,KAClC,OACE,SAAC,KAAD,CACEA,KAAMA,EACNyC,OAAQ,SAAAC,GAAO,OAAI,SAACH,EAAD,UAAYG,GAAhB,GAGpB,CCDD,IAAMC,EAAgB,CACpB3C,KAAM,GACN4C,MAAO,IAOHC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1C/C,KAAM8C,EAAAA,KAEHE,QAPc,yHASb,+DAEDC,SAAS,2BAEZL,MAAOE,EAAAA,KAEJE,QAbe,uDAed,gGAEDC,SAAS,+BAUC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXlE,GAAWmE,EAAAA,EAAAA,IAAYrE,GAiB7B,OACE,SAAC,KAAD,CACE2D,cAAeA,EACfE,iBAAkBA,EAClBS,SAnBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAO9B,GANA,SAAyBD,GACvB,OAAOrE,EAASuE,MACd,SAAA1D,GAAO,OAAIA,EAAQC,KAAKF,gBAAkByD,EAAOvD,KAAKF,aAA/C,GAEV,CAEG4D,CAAgBH,GAClB,OAAOI,EAAAA,OAAAA,KAAA,UAAeJ,EAAOvD,KAAtB,6BAGTmD,GAASS,EAAAA,EAAAA,IAAWL,IACpBC,GACD,EAGC,UAKE,UAAC,KAAD,CAAMK,aAAa,MAAnB,WACE,UAAC1C,EAAD,mBAEE,SAACO,EAAD,CAAOoC,KAAK,OAAO9D,KAAK,aAE1B,SAACwC,EAAD,CAAWxC,KAAK,UAEhB,UAACmB,EAAD,qBAEE,SAACO,EAAD,CAAOoC,KAAK,MAAM9D,KAAK,cAEzB,SAACwC,EAAD,CAAWxC,KAAK,WAEhB,SAACiC,EAAD,CAAQ6B,KAAK,SAAb,6BAIP,CAjDDH,EAAAA,OAAAA,KAAY,CACVI,SAAU,aACVC,SAAU,OACVC,QAAS,IACTrD,MAAO,U,gCCtCIsD,GAAOhE,EAAAA,EAAAA,IAAOiE,EAAAA,IAAPjE,CAAH,gDACC,SAAAkB,GAAC,OAAIA,EAAEC,MAAMjB,MAAM,EAAlB,IAGNgE,GAAclE,EAAAA,EAAAA,IAAO+B,EAAP/B,CAAH,gJCAT,SAASmE,EAAT,GAA+B,IAAZtE,EAAW,EAAXA,QAC1BoD,GAAWC,EAAAA,EAAAA,MAETpD,EAAoBD,EAApBC,KAAM4C,EAAc7C,EAAd6C,MAAO0B,EAAOvE,EAAPuE,GACrB,OACE,iCACE,SAACJ,EAAD,IACClE,EAFH,KAEW4C,GACT,SAACwB,EAAD,CAAaN,KAAK,SAASS,QAAS,kBAAMpB,GAASqB,EAAAA,EAAAA,IAAcF,GAA7B,EAApC,UACE,SAAC,MAAD,CAAgBG,KAAM,SAI7B,CCnBM,IAAMC,EAAOxE,EAAAA,GAAAA,GAAH,+CAIJyE,EAAOzE,EAAAA,GAAAA,GAAH,iLAGJ,SAAAkB,GAAC,OAAIA,EAAEC,MAAMG,OAAOY,KAAnB,IACG,SAAAhB,GAAC,OAAIA,EAAEC,MAAMO,UAAUC,CAAtB,ICJH,SAAS+C,IACtB,IAAM1F,GAAWmE,EAAAA,EAAAA,IAAY3D,GAE7B,OACE,SAACgF,EAAD,UACGxF,EAAS2F,KAAI,SAAA9E,GAAO,OACnB,SAAC4E,EAAD,WACE,SAACN,EAAD,CAAStE,QAASA,KADTA,EAAQuE,GADA,KAO1B,C,0BCdYQ,GAAc5E,EAAAA,EAAAA,IAAOiB,EAAPjB,CAAH,uCACb,SAAAkB,GAAC,OAAIA,EAAEC,MAAMG,OAAOY,KAAnB,IAGC2C,GAAc7E,EAAAA,GAAAA,MAAH,qOAET,SAAAkB,GAAC,OAAIA,EAAEC,MAAMO,UAAUC,CAAtB,IACH,SAAAT,GAAC,OAAIA,EAAEC,MAAMjB,MAAM,EAAlB,IAIF,SAAAgB,GAAC,OAAIA,EAAEC,MAAMS,QAAQC,MAApB,IAA8B,SAAAX,GAAC,OAAIA,EAAEC,MAAMG,OAAOY,KAAnB,IACzB,SAAAhB,GAAC,OAAIA,EAAEC,MAAMW,MAAMD,MAAlB,IAET,SAAAX,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,IAAnB,ICZG,SAASuD,KACtB,IAAMvF,GAAS4D,EAAAA,EAAAA,IAAY7D,GACrB2D,GAAWC,EAAAA,EAAAA,MAOjB,OACE,UAAC0B,EAAD,oCAEE,SAACC,GAAD,CAAajB,KAAK,OAAOmB,MAAOxF,EAAQyF,SARvB,SAAAC,GACnB,IAAQF,EAAUE,EAAEC,OAAZH,MACR9B,GAASkC,EAAAA,EAAAA,GAAaJ,GACvB,MAQF,CCnBM,IAAMK,GAAQpF,EAAAA,GAAAA,GAAH,uCACP,SAAAkB,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,OAAnB,IAGCkD,GAAWrF,EAAAA,GAAAA,GAAH,kEACV,SAAAkB,GAAC,OAAIA,EAAEC,MAAMG,OAAOY,KAAnB,IAICoD,GAAUtF,EAAAA,GAAAA,EAAH,kIACH,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,QAAxB,IACL,SAAAH,GAAC,OAAIA,EAAEC,MAAMjB,MAAM,EAAlB,IACK,SAAAgB,GAAC,OAAIA,EAAEC,MAAMW,MAAMD,MAAlB,IACE,SAAAX,GAAC,OAAIA,EAAEC,MAAMG,OAAOc,SAAnB,IAIVmD,IAAQvF,EAAAA,EAAAA,IAAOsF,GAAPtF,CAAH,kDACI,SAAAkB,GAAC,OAAIA,EAAEC,MAAMG,OAAOkE,GAAnB,ICFR,SAASC,KACtB,IAAMxC,GAAWC,EAAAA,EAAAA,MAEXlE,GAAWmE,EAAAA,EAAAA,IAAY3D,GACvBL,GAAYgE,EAAAA,EAAAA,IAAYjE,GACxBG,GAAQ8D,EAAAA,EAAAA,IAAY/D,GACpBG,GAAS4D,EAAAA,EAAAA,IAAY7D,GAM3B,OAJAoG,EAAAA,EAAAA,YAAU,WACRzC,GAAS0C,EAAAA,EAAAA,MACV,GAAE,CAAC1C,KAGF,UAAC,EAAD,CACE2C,GAAG,UACHC,SAAS,QACTnF,MAAM,OACNoF,UAAU,SACVC,GAAG,OACHC,GAAI,EACJC,GAAI,EACJC,GAAG,QACHC,aAAa,SACbC,UAAU,SACVC,SAAS,SAXX,WAaE,UAAC,EAAD,CAAKC,GAAI,EAAT,WACE,SAAClB,GAAD,yBACA,SAACpC,EAAD,QAGF,UAAC,EAAD,CAAKgD,GAAI,EAAGO,GAAI,EAAGD,GAAI,EAAGJ,GAAG,UAA7B,WACE,SAACb,GAAD,wBACA,SAACP,GAAD,IAEC3F,IAAa,SAACqB,EAAD,IAEbnB,IAAS,UAACkG,GAAD,oCAA8BlG,EAA9B,OAETL,EAASwH,OAAS,IAAK,SAAC9B,EAAD,IAEZ,KAAXnF,GAAqC,IAApBP,EAASwH,SACzB,SAAClB,GAAD,2CAKT,C","sources":["redux/selectors.js","components/Box/Box.jsx","shared/Loader/Loader.jsx","components/ContactForm/ContactForm.styles.jsx","components/FormError/FormError.styles.jsx","components/FormError/FormError.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styles.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styles.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styles.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  border,\n  shadow,\n  typography,\n  flexbox,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  border,\n  shadow,\n  typography,\n  flexbox\n);\n\nexport default Box;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"#fff\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </>\n  );\n}\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  margin-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.text};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.white};\n  transition: all 100ms linear;\n  background-color: ${p => p.theme.colors.primary};\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: red;\n  text-align: left;\n  margin: 4px 0 8px;\n`;\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { ErrorText } from './FormError.styles';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport { Button, Input, Label } from './ContactForm.styles';\nimport FormError from 'components/FormError/FormError';\n\nconst initialValues = {\n  name: '',\n  phone: '',\n};\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst phoneRegExp = /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/;\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    )\n    .required('Please fill in the name'),\n\n  phone: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Please fill in the number'),\n});\n\nNotify.init({\n  position: 'center-top',\n  fontSize: '16px',\n  timeout: 4000,\n  width: '400px',\n});\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    function isDublicateName(values) {\n      return contacts.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      );\n    }\n\n    if (isDublicateName(values)) {\n      return Notify.info(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n        </Label>\n        <FormError name=\"name\" />\n\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"phone\" />\n        </Label>\n        <FormError name=\"phone\" />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n}\n","import { Button } from 'components/ContactForm/ContactForm.styles';\nimport { FaPhoneAlt } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nexport const Icon = styled(FaPhoneAlt)`\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const CloseButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  width: auto;\n  text-align: right;\n  margin-top: 0;\n  margin-left: auto;\n`;\n","import { AiOutlineClose } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { CloseButton, Icon } from './Contact.styles';\n\nexport default function Contact({ contact }) {\n  const dispatch = useDispatch();\n\n  const { name, phone, id } = contact;\n  return (\n    <>\n      <Icon />\n      {name}: {phone}\n      <CloseButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <AiOutlineClose size={18} />\n      </CloseButton>\n    </>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    text-align: left;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;\n    color: ${p => p.theme.colors.white};\n    font-size: ${p => p.theme.fontSizes.s};\n    \n    :not(:last-child) {\n        margin-bottom: 10px;\n    };\n`;\n\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nimport Contact from 'components/Contact/Contact';\nimport { Item, List } from './ContactList.styles';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          <Contact contact={contact} />\n        </Item>\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nimport { Label } from 'components/ContactForm/ContactForm.styles';\n\nexport const FilterLabel = styled(Label)`\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  margin-bottom: 16px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n  color: ${p => p.theme.colors.text};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { FilterInput, FilterLabel } from './Filter.styles';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" value={filter} onChange={handleChange} />\n    </FilterLabel>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: ${p => p.theme.colors.primary};\n`;\n\nexport const Subtitle = styled.h2`\n  color: ${p => p.theme.colors.white};\n  letter-spacing: 0.02em;\n`;\n\nexport const Message = styled.p`\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.secondary};\n  color: white;\n`;\n\nexport const Error = styled(Message)`\n  background-color: ${p => p.theme.colors.bad};\n`;\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectFilter,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/selectors';\n\nimport Box from 'components/Box/Box';\nimport Loader from 'shared/Loader/Loader';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Error, Message, Subtitle, Title } from './Contacts.styles';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      as=\"section\"\n      maxWidth=\"400px\"\n      width=\"80vw\"\n      textAlign=\"center\"\n      mx=\"auto\"\n      mt={5}\n      pt={5}\n      bg=\"white\"\n      borderRadius=\"normal\"\n      boxShadow=\"normal\"\n      overflow=\"hidden\"\n    >\n      <Box px={5}>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </Box>\n\n      <Box mt={5} py={5} px={5} bg=\"primary\">\n        <Subtitle>Contacts</Subtitle>\n        <Filter />\n\n        {isLoading && <Loader />}\n\n        {error && <Error>Something goes wrong. {error}.</Error>}\n\n        {contacts.length > 0 && <ContactList />}\n\n        {filter !== '' && contacts.length === 0 && (\n          <Message>This name was not found</Message>\n        )}\n      </Box>\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filterValue","normalizedFilter","toLowerCase","contact","name","includes","styled","color","space","layout","border","shadow","typography","flexbox","Loader","height","width","radius","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Label","p","theme","fontWeights","semibold","colors","text","Input","Field","fontSizes","s","borders","normal","radii","Button","none","bold","white","primary","secondary","ErrorText","FormError","render","message","initialValues","phone","validationSchema","yup","shape","matches","required","ContactForm","dispatch","useDispatch","useSelector","onSubmit","values","resetForm","find","isDublicateName","Notify","addContact","autoComplete","type","position","fontSize","timeout","Icon","FaPhoneAlt","CloseButton","Contact","id","onClick","deleteContact","size","List","Item","ContactList","map","FilterLabel","FilterInput","Filter","value","onChange","e","target","changeFilter","Title","Subtitle","Message","Error","bad","Contacts","useEffect","fetchContacts","as","maxWidth","textAlign","mx","mt","pt","bg","borderRadius","boxShadow","overflow","px","py","length"],"sourceRoot":""}