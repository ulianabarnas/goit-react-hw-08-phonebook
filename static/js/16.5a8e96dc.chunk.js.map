{"version":3,"file":"static/js/16.5a8e96dc.chunk.js","mappings":"+LAEaA,E,QAAYC,GAAAA,EAAH,kFACX,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,I,UCEG,SAASC,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAClC,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACT,EAAD,UAAYS,GAAhB,GAGpB,C,mLCPYC,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,4DAKVW,EAAQX,EAAAA,GAAAA,MAAH,0HAGD,SAAAC,GAAC,OAAIA,EAAEC,MAAMU,YAAYC,QAAxB,IACF,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,MAAM,EAAlB,IACN,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,OAAOY,IAAnB,IAGCC,GAAQhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,8LAEH,SAAAC,GAAC,OAAIA,EAAEC,MAAMgB,UAAUC,CAAtB,IACH,SAAAlB,GAAC,OAAIA,EAAEC,MAAMY,MAAM,EAAlB,IAGF,SAAAb,GAAC,OAAIA,EAAEC,MAAMkB,QAAQC,MAApB,IAA8B,SAAApB,GAAC,OAAIA,EAAEC,MAAMC,OAAOY,IAAnB,IACzB,SAAAd,GAAC,OAAIA,EAAEC,MAAMoB,MAAMD,MAAlB,IAIPE,GAAevB,EAAAA,EAAAA,IAAOwB,EAAAA,EAAPxB,CAAH,gEAER,SAAAC,GAAC,OAAIA,EAAEC,MAAMY,MAAM,EAAlB,G,yGC7BLW,EAAUzB,EAAAA,GAAAA,EAAH,yJAEH,SAAAC,GAAC,OAAIA,EAAEC,MAAMU,YAAYC,QAAxB,IACL,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,MAAM,EAAlB,IACK,SAAAb,GAAC,OAAIA,EAAEC,MAAMoB,MAAMD,MAAlB,IACE,SAAApB,GAAC,OAAIA,EAAEC,MAAMC,OAAOuB,SAAnB,IAIVC,GAAQ3B,EAAAA,EAAAA,IAAOyB,EAAPzB,CAAH,kDACI,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,G,kKCMjBwB,EAAgB,CACpBtB,KAAM,GACNuB,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1C3B,KAAM0B,EAAAA,KAEHE,KAAK,+DACLC,QAAO,GACPC,SAAS,2BAEZP,MAAOG,EAAAA,KAEJH,MAAM,yBACNO,SAAS,4BAEZN,SAAUE,EAAAA,KAEPE,KAAK,+DACLC,QAAO,GACPE,IAAI,EAAG,sDACPD,SAAS,iCAGC,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACTpC,GAAUqC,EAAAA,EAAAA,KAAVrC,MAMR,OACE,SAAC,KAAD,CACEwB,cAAeA,EACfG,iBAAkBA,EAClBW,SARiB,SAAAC,GACnBJ,GAASK,EAAAA,EAAAA,IAASD,GACnB,EAGC,UAKE,UAAC,KAAD,CAAYE,aAAa,MAAzB,WACE,UAAC,KAAD,uBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOxC,KAAK,aAE1B,SAACD,EAAA,EAAD,CAAWC,KAAK,UAEhB,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAOwC,KAAK,QAAQxC,KAAK,cAE3B,SAACD,EAAA,EAAD,CAAWC,KAAK,WAEhB,UAAC,KAAD,uBAEE,SAAC,KAAD,CAAOwC,KAAK,WAAWxC,KAAK,iBAE9B,SAACD,EAAA,EAAD,CAAWC,KAAK,aAEfF,IAAS,SAAC,IAAD,UAAQA,KAElB,SAAC,KAAD,CAAc0C,KAAK,SAAnB,0BAIP,C,cChFc,SAASC,IACtB,OACE,6BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACV,EAAD,MAGL,C","sources":["components/FormError/FormError.styles.jsx","components/FormError/FormError.jsx","components/UI/FormikForm/FormikForm.styles.jsx","components/UI/Message/Message.styles.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: ${p => p.theme.colors.error};\n  text-align: left;\n  margin: 4px 0 8px;\n`;\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { ErrorText } from './FormError.styles';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nimport { Button } from '../Button/Button.styles';\n\nexport const StyledForm = styled(Form)`\n  width: 320px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  margin-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px 4px;\n  margin-top: 6px;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.text};\n  border-radius: ${p => p.theme.radii.normal};\n  box-sizing: border-box;\n`;\n\nexport const StyledButton = styled(Button)`\n   width: 100%;\n   margin-top: ${p => p.theme.space[4]}px;\n`","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  text-align: center;\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.secondary};\n  color: white;\n`;\n\nexport const Error = styled(Message)`\n  background-color: ${p => p.theme.colors.error};\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nimport { useAuth } from 'hooks/useAuth';\n\nimport FormError from 'components/FormError/FormError';\n\nimport { Error } from 'components/UI/Message/Message.styles';\nimport {\n  Input,\n  Label,\n  StyledButton,\n  StyledForm,\n} from 'components/UI/FormikForm/FormikForm.styles';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .trim('The contact name cannot include leading and trailing spaces')\n    .strict(true)\n    .required('Please fill in the name'),\n\n  email: yup\n    .string()\n    .email('Email must be a valid')\n    .required('Please fill in the email'),\n\n  password: yup\n    .string()\n    .trim('The contact name cannot include leading and trailing spaces')\n    .strict(true)\n    .min(7, 'Password is too short - should be 7 chars minimum.')\n    .required('Please fill in the password'),\n});\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n  const { error } = useAuth();\n\n  const handleSubmit = values => {\n    dispatch(register(values));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm autoComplete=\"off\">\n        <Label>\n          Username\n          <Input type=\"text\" name=\"name\" />\n        </Label>\n        <FormError name=\"name\" />\n\n        <Label>\n          Email\n          <Input type=\"email\" name=\"email\" />\n        </Label>\n        <FormError name=\"email\" />\n\n        <Label>\n          Password\n          <Input type=\"password\" name=\"password\" />\n        </Label>\n        <FormError name=\"password\" />\n\n        {error && <Error>{error}</Error>}\n\n        <StyledButton type=\"submit\">Register</StyledButton>\n      </StyledForm>\n    </Formik>\n  );\n}\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <main>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </main>\n  );\n}\n"],"names":["ErrorText","styled","p","theme","colors","error","FormError","name","render","message","StyledForm","Form","Label","fontWeights","semibold","space","text","Input","Field","fontSizes","s","borders","normal","radii","StyledButton","Button","Message","secondary","Error","initialValues","email","password","validationSchema","yup","shape","trim","strict","required","min","RegisterForm","dispatch","useDispatch","useAuth","onSubmit","values","register","autoComplete","type","Register","Helmet"],"sourceRoot":""}